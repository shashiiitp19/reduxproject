{"version":3,"sources":["components/Auth.module.css","components/Counter.module.css","components/Header.module.css","components/UserProfile.module.css","store/indexReduxToolkit.js","components/Counter.js","components/Auth.js","components/Header.js","components/UserProfile.js","App.js","index.js"],"names":["module","exports","counterSlice","createSlice","name","initialState","counter","showCounter","reducers","increment","state","decrement","increase","action","payload","toggle","authSlice","isAuthenticated","login","logout","store","configureStore","reducer","auth","authActions","actions","counterActions","Counter","useSelector","show","dispatch","useDispatch","className","classes","value","onClick","Auth","onSubmit","event","preventDefault","control","htmlFor","type","id","Header","isAuth","header","href","UserProfile","profile","App","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.da68bd12.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"auth\":\"Auth_auth__3-mau\",\"control\":\"Auth_control__2A6q5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"counter\":\"Counter_counter__2hCSh\",\"value\":\"Counter_value__3TTeA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__kpKyt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"UserProfile_profile__3NL0n\"};","import redux from 'redux';\r\nimport { legacy_createStore } from 'redux';\r\nimport { createSlice, configureStore } from '@reduxjs/toolkit';\r\n\r\nconst initialCounterState = {counter: 0, showCounter: true };\r\n\r\nconst counterSlice = createSlice({\r\n    name: 'counter',\r\n    initialState: initialCounterState,\r\n    reducers: {\r\n        increment(state) {\r\n            state.counter++;\r\n        },\r\n        decrement(state) {\r\n            state.counter--;\r\n        },\r\n        increase(state, action) {\r\n            state.counter = state.counter + action.payload;\r\n        },\r\n        toggle(state) {\r\n            state.showCounter = !state.showCounter;\r\n        }\r\n    }\r\n});\r\n\r\nconst initialAuthState = {isAuthenticated: false};\r\n\r\nconst authSlice = createSlice({\r\n    name: 'authentication',\r\n    initialState: initialAuthState,\r\n    reducers: {\r\n        login(state){\r\n            state.isAuthenticated = true;\r\n        },\r\n        logout(state){\r\n            state.isAuthenticated = false;\r\n        }\r\n    }\r\n});\r\n\r\nconst store = configureStore({\r\n    reducer: {counter: counterSlice.reducer, auth: authSlice.reducer}, \r\n    //merge all reducers into one big reducer.\r\n});\r\n\r\nexport const authActions = authSlice.actions;\r\nexport const counterActions = counterSlice.actions;\r\n\r\nexport default store;","import { useSelector, useDispatch } from 'react-redux';\nimport classes from './Counter.module.css';\nimport { counterActions } from '../store/indexReduxToolkit';\n\nconst Counter = () => {\n  const counter = useSelector(state => state.counter.counter);\n  const show = useSelector(state => state.counter.showCounter);\n\n  const dispatch = useDispatch();\n\n  const incrementHandler = () => {\n    dispatch(counterActions.increment());\n  };\n  const decrementHandler = () => {\n    dispatch(counterActions.decrement());\n  };\n  const increaseHandler = () => {\n    dispatch(counterActions.increase(10));\n  };\n  const toggleCounterHandler = () => {\n    dispatch(counterActions.toggle());\n  };\n\n  return (\n    <main className={classes.counter}>\n      <h1>Redux Counter</h1>\n      { show && <div className={classes.value}>{counter}</div> }\n      <div>\n        <button onClick={incrementHandler}>Increment</button>\n        <button onClick={increaseHandler}>Increase by 5</button>\n        <button onClick={decrementHandler}>Decrement</button>\n      </div>\n      <button onClick={toggleCounterHandler}>Toggle Counter</button>\n    </main>\n  );\n};\n\nexport default Counter;\n","import { useDispatch } from 'react-redux/es/exports';\nimport { authActions } from '../store/indexReduxToolkit';\nimport classes from './Auth.module.css';\n\nconst Auth = () => {\n  const dispatch = useDispatch();\n  const submitHandler = (event) => {\n    event.preventDefault();\n    dispatch(authActions.login());\n  };\n\n  return (\n    <main className={classes.auth}>\n      <section>\n        <form onSubmit={submitHandler}>\n          <div className={classes.control}>\n            <label htmlFor='email'>Email</label>\n            <input type='email' id='email' />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor='password'>Password</label>\n            <input type='password' id='password' />\n          </div>\n          <button>Login</button>\n        </form>\n      </section>\n    </main>\n  );\n};\n\nexport default Auth;\n","import classes from \"./Header.module.css\";\nimport { useSelector, useDispatch } from \"react-redux/es/exports\";\nimport { authActions } from \"../store/indexReduxToolkit\";\n\nconst Header = () => {\n  const isAuth = useSelector(state => state.auth.isAuthenticated);\n  const dispatch = useDispatch();\n  const onClickHandler = () =>{\n    dispatch(authActions.logout());\n  };\n\n  return (\n    <header className={classes.header}>\n      <h1>Redux Auth</h1>\n      {isAuth && (\n        <nav>\n          <ul>\n            <li>\n              <a href=\"/\">My Products</a>\n            </li>\n            <li>\n              <a href=\"/\">My Sales</a>\n            </li>\n            <li>\n              <button onClick={onClickHandler}>Logout</button>\n            </li>\n          </ul>\n        </nav>\n      )}\n    </header>\n  );\n};\n\nexport default Header;\n","import classes from './UserProfile.module.css';\n\nconst UserProfile = () => {\n  return (\n    <main className={classes.profile}>\n      <h2>My User Profile</h2>\n    </main>\n  );\n};\n\nexport default UserProfile;\n","import { Fragment } from 'react';\nimport { useSelector } from 'react-redux/es/exports';\nimport Counter from './components/Counter';\nimport Auth from './components/Auth';\nimport Header from './components/Header';\nimport UserProfile from './components/UserProfile';\n\nfunction App() {\n\n  const isAuth = useSelector(state=>state.auth.isAuthenticated);\n\n  return (\n   <Fragment>\n    <Header/>\n    {!isAuth && <Auth/>}\n    {isAuth && <UserProfile/>}\n    <Counter />\n  </Fragment>\n\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { Provider } from 'react-redux';\n\n\nimport './index.css';\nimport App from './App';\n\nimport store from './store/indexReduxToolkit';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<Provider store={store}><App /></Provider>);\n"],"sourceRoot":""}